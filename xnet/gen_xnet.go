// Code generated by tools. DO NOT EDIT.
package xnet

type smallObjCreatorType struct {
	creator_PBPacket
	creatorSlice_PBPacket
	creatorPtr_PBPacket
}

var smallObjCreator smallObjCreatorType

type creator_PBPacket struct {
	buf []PBPacket
	idx int
}

func (cr *creator_PBPacket) create(chunk int) *PBPacket {
 	if cr.idx >= len(cr.buf) {
  		cr.buf = make([]PBPacket, chunk)
		cr.idx = 0
	}
 	current := &cr.buf[cr.idx]
 	cr.idx++
 	return current
}

type creatorSlice_PBPacket struct {
	buf []PBPacket
 	idx int
}

func (cr *creatorSlice_PBPacket) create(slen, scap, chunk int) []PBPacket {
	if scap > chunk {
  		return make([]PBPacket, slen, scap)
 	}
 	if cr.idx + scap > len(cr.buf) {
  		cr.buf = make([]PBPacket, chunk, chunk) 
  		cr.idx = 0
 	}
 	current := cr.buf[cr.idx:cr.idx+slen:cr.idx+scap]
 	cr.idx += scap
 	return current
}

type creatorPtr_PBPacket struct {
 	buf []*PBPacket
 	idx int
}

func (cr *creatorPtr_PBPacket) create(slen, scap, chunk int) []*PBPacket {
 	if scap > chunk {
  		return make([]*PBPacket, slen, scap)
 	}
 	if cr.idx + scap > len(cr.buf) {
  		cr.buf = make([]*PBPacket, chunk, chunk)
 	 	cr.idx = 0
 	}
 	current := cr.buf[cr.idx:cr.idx+slen:cr.idx+scap]
 	cr.idx += scap
 	return current
}

func New_PBPacket() *PBPacket {
	return smallObjCreator.creator_PBPacket.create(256)
}

func NewSlice_PBPacket(slen, scap int) []PBPacket {
	return smallObjCreator.creatorSlice_PBPacket.create(slen , scap, 4096)
}

func NewPtrSlice_PBPacket(slen, scap int) []*PBPacket {
	return smallObjCreator.creatorPtr_PBPacket.create(slen , scap, 4096)
}
